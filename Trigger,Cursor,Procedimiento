---TRIGGER--
create or replace function tr_tramite()
returns trigger as $tr_tramite$
declare
tipotramite int;
ntramite int;
begin
select count (*) into tipotramite from tramite where id_cliente=new.id_cliente;
		 select id_cliente into ntramite from cliente ;  
if(tipotramite > 0) then
   raise exception SQLSTATE 'E0006' using
        message = 'Este Cliente no Puede hacer misa de sepelio porque no tiene el apellido paterno..';
	return false;
end if;
return new;
end;
$tr_tramite$ language plpgsql;
create trigger tr_tramite
before insert or update on cliente
for each row
execute procedure tr_tramite();

INSERT INTO CLIENTE(ID_CLIENTE, NOMBRESCLI, APELLIDOSCLI, DIRECCIONCLI, TELEFONOCLI, CORREOCLI, IDENTIFICADORCLI)
VALUES ('5', 'LUIS CARLOS', 'LOOR CAÃ‘ARTE','MANTA', '096532876', 'LUIS@GGMAIL.COM', '1305698742');

---CURSOR----
do  $$
declare 
 ndatos Record;
 totals int =0;
 c_ncursor cursor for select * from sacramento,tipo_personal,feligrese
 where sacramento.id_sacramento = tipo_personal.id_personal
order by totals asc;	
begin
for ndatos in  c_ncursor loop
fetch  c_ncursor into ndatos;
totals= totals  + count (ndatos.id_sacramento);
raise notice 'CANTIDAD PADRES: %  ,FECHA SACRAMENTO: %,CANTIDAD DINERO: % ,CANTIDAD PERSONAS: %', ndatos.tipopers, 
ndatos.fechasa,
ndatos.totals,ndatos.cantidads;
end loop;
end $$
language 'plpgsql';

---PROCEDIMIENTO--

create or replace function sacerdote(int)
returns  varchar as $$
	DECLARE 
		datoingre alias for $1; datos RECORD;
		cur_datos  cursor for SELECT
		    sacramento.tipos as Sacramento,
		    sacramento.id_sacramento as id,
		    personal.nombresp as nombres, 
			personal.apellidosp as apellidos,
			sacramento.fechasa as Anio_Sacramento,
			sacramento.cantidads as Cantidad_Sacramento
			FROM sacramento
		  	inner join personal on sacramento.id_sacramento= personal.id_personal WHERE sacramento.id_sacramento=$1
			group by sacramento.tipos,personal.nombresp ,personal.apellidosp, sacramento.id_sacramento,sacramento.fechasa,sacramento.cantidads ;
begin
	OPEN cur_datos;
		FETCh cur_datos INTO datos;
		RAISE NOTICE 
			'
			SACRAMENTOS: % 
        ESTOS SON LOS SACRAMENTOS REALIZADOS Y LA CANTIDAD DE ESTE SACERDOTE:
			',
			datos.Sacramento;
		while (found) loop 
			RAISE NOTICE 
			'
			NOMBRE: %
			APELLIDO: %
			ANIO SACRAMENTO: %
			CANTIDAD SACRAMENTOS: %
			',
			datos.nombres,datos.apellidos,datos.Anio_Sacramento,datos.Cantidad_Sacramento;
			FETCh cur_datos INTO datos;
		end loop;
END;
$$ LANGUAGE plpgsql;
SELECT sacerdote(1)

